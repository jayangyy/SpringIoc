<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.0.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
        <!-- 启用自动注解扫描支持 ,此配置节点卸载dispatcher-servlet.xml中无效，测试没有扫描-->
     <context:component-scan base-package="com.ioc.domains">
	 </context:component-scan> 
	 <bean id="boss" class="com.domains.SetIocTest">
		<property name="iocmodel" ref="iocmodel"></property>
		<!--构造函数注入 <constructor-arg ref="iocmodel"></constructor-arg> -->
	</bean>
	<bean id="iocmodel" class="com.domains.IocModel"></bean>
	<bean id="boss1" class="com.ioc.domains.Boss">	
	</bean>
	<bean id="office" class="com.ioc.domains.Office">
		<property name="officNo" value="002" />
	</bean>
	<bean id="car" class="com.ioc.domains.Car" scope="singleton">
		<property name="brand" value="红旗 CA72" />
		<property name="price" value="2000" />
	</bean>
		<!-- <bean id="offic1" class="com.ioc.domains.Offic1">
		<property name="officNo" value="002" />
	</bean> -->
	<!-- <bean id="car1" class="com.ioc.domains.Car1" scope="singleton">
		<property name="brand" value="红旗 CA72" />
		<property name="price" value="2000" />
	</bean> -->
<!-- 	<bean id="boss2" class="com.ioc.domains.Boss1">
	</bean> -->














	<!--配置bean,配置后该类由spring管理静态工厂 -->
	<!-- <bean name="springAction" class="com.bless.springdemo.action.SpringAction" 
		> (3)使用静态工厂的方法注入对象,对应下面的配置文件(3) <property name="staticFactoryDao" ref="staticFactoryDao"></property> 
		</property> </bean> -->
	<!--(3)此处获取对象的方式是从工厂类中获取静态方法示例工厂 -->
	<!-- <bean name="staticFactoryDao" class="com.bless.springdemo.factory.DaoFactory" 
		factory-method="getStaticFactoryDaoImpl"></bean> 配置bean,配置后该类由spring管理 <bean 
		name="springAction" class="com.bless.springdemo.action.SpringAction"> (4)使用实例工厂的方法注入对象,对应下面的配置文件(4) 
		<property name="factoryDao" ref="factoryDao"></property> </bean> -->
	<!--(4)此处获取对象的方式是从工厂类中获取实例方法 -->
	<!-- <bean name="daoFactory" class="com.bless.springdemo.factory.DaoFactory"></bean> 
		<bean name="factoryDao" factory-bean="daoFactory" factory-method="getFactoryDaoImpl"></bean> -->
</beans>